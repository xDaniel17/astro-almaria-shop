---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import AlmariaFooter from "../../components/almaria-footer.astro";
import AlmariaHeader from "../../components/almaria-header.astro";

export async function getStaticPaths() {
    const items = await getCollection("items");

    return items.map((item) => ({
        params: { id: item.slug },
        props: { item },
    }));
}

const { item } = Astro.props;
const { data, slug } = item;
const {
    title,
    description,
    isSale,
    isStock,
    creationDate,
    price,
    regularPrice,
    material,
    image,
    sizes,
    startDate,
    endDate,
} = data;

export const prerender = true;
const today = new Date();
---

<Layout title="Almaria Shop" description="Almaria Shop - ropa y accesorios">
    <div class="flex flex-col min-h-screen">
        <AlmariaHeader />
        <main class="bg-white dark:bg-[rgb(35,37,40)] flex-grow">
            <div
                class="mx-auto max-w-2xl px-4 py-4 sm:px-6 sm:py-8 lg:max-w-7xl lg:px-8"
            >
                <article
                    class="mx-auto max-w-2xl px-1 py-4 sm:px-6 sm:py-8 lg:max-w-7xl lg:px-8"
                >
                    <h2
                        class="text-2xl font-bold tracking-tight text-gray-900 dark:text-gray-100"
                    >
                        Detalles del producto
                    </h2>
                    <a
                        href="/"
                        class="hover:underline opacity-90 text-gray-900 dark:text-gray-100"
                        >← Volver atrás</a
                    >
                    <div
                        class="mt-6 flex flex-col lg:flex-row gap-x-4 gap-y-10"
                    >
                        <aside class="w-full lg:w-1/2">
                            <article class="group relative hover:scale-105">
                                <div class="slider">
                                    <div class="slides flex flex-grow">
                                        {
                                            image.map((img, index) => (
                                                <div id={`slide-${index + 1}`}>
                                                    {index === 0 ? (
                                                        <img
                                                            transition:name={`img-${slug}`}
                                                            src={`/${img}`}
                                                            alt={description}
                                                            class="aspect-square w-full rounded-md bg-gray-200 object-cover lg:aspect-auto lg:h-100 main-image"
                                                        />
                                                    ) : (
                                                        <img
                                                            src={`/${img}`}
                                                            alt={description}
                                                            class="aspect-square w-full rounded-md bg-gray-200 object-cover lg:aspect-auto lg:h-100"
                                                        />
                                                    )}
                                                </div>
                                            ))
                                        }
                                    </div>
                                    <div class="slider-nav">
                                        {
                                            image.map((img, index) => (
                                                <a href={`#slide-${index + 1}`}>
                                                    {index + 1}
                                                </a>
                                            ))
                                        }
                                    </div>
                                </div>
                                {isSale &&
                                        today >= startDate &&
                                        today <= endDate && (
                                            <span class="absolute top-2 left-2 bg-red-500 text-white font-semibold px-2 py-1 rounded">
                                                Oferta
                                            </span>
                                        )
                                }
                                {
                                    new Date().getTime() -
                                        new Date(creationDate).getTime() <
                                        30 * 24 * 60 * 60 * 1000 && (
                                        <span class="absolute top-2 right-2 bg-green-500 text-white font-semibold px-2 py-1 rounded">
                                            Nuevo
                                        </span>
                                    )
                                }
                            </article>
                        </aside>

                        <div
                            class="w-full lg:w-1/2 flex flex-col text-center md:pt-12"
                        >
                            <h3
                                class="text-2xl font-bold text-gray-900 dark:text-gray-100"
                            >
                                {title}
                            </h3>
                            <p
                                class="mt-2 text-gray-600 text-lg dark:text-gray-400"
                            >
                                {description}
                            </p>
                            <p
                                class="mt-2 text text-gray-500 dark:text-gray-400"
                            >
                                Material: {material}
                            </p>

                            <div class="mt-4">
                                {isSale &&
                                    today >= startDate &&
                                    today <= endDate ? (
                                        <div class="text-lg font-medium text-gray-900 dark:text-gray-100">
                                            <p>
                                                <span class="line-through text-gray-500 dark:text-gray-400">
                                                    ${regularPrice.toFixed(2)}
                                                </span>
                                            </p>
                                            <p>
                                                {/* <span class="text-red-500">
                                                    (Descuento:{" "}
                                                    {Math.round(
                                                        (1 -
                                                            price /
                                                                regularPrice) *
                                                            100,
                                                    )}
                                                    %)
                                                </span> */}
                                                ${price.toFixed(2)}
                                            </p>
                                        </div>
                                    ) : (
                                        <p class="text-xl font-medium text-gray-900 dark:text-gray-100">
                                            ${regularPrice.toFixed(2)}
                                        </p>
                                    )
                                }
                            </div>

                            <div class="mt-4">
                                <h4
                                    class="text-sm font-medium text-gray-700 dark:text-gray-300"
                                >
                                    Tallas disponibles:
                                </h4>
                                <div
                                    class="flex flex-wrap gap-2 mt-2 justify-center"
                                >
                                    {
                                        sizes.map((size) => (
                                            <span
                                                id={size}
                                                class="px-2 py-1 border rounded text-gray-700 dark:text-gray-300 border-gray-300 dark:border-gray-700 hover:scale-110 cursor-pointer"
                                            >
                                                {size}
                                            </span>
                                        ))
                                    }
                                </div>
                            </div>

                            <div class="my-6">
                                <a
                                    target="_blank"
                                    href={`https://wa.me/50375438029?text=Buen%20día,%20quería%20consultar%20sobre%20el%20${title}`}
                                    class="px-4 py-2 bg-[rgb(112,142,174)] text-white font-semibold rounded hover:bg-gray-600 dark:hover:bg-[rgb(148,106,105)] dark:bg-[rgb(188,142,150)]"
                                >
                                    Pedir por Whatsapp
                                </a>
                            </div>
                        </div>
                    </div>
                </article>
            </div>
        </main>
        <AlmariaFooter />
    </div>
</Layout>

<style>
    .slider {
        width: 100%;
        text-align: center;
        overflow: hidden;
    }

    .slides {
        display: flex;
        overflow-x: auto;
        scroll-snap-type: x mandatory;
        scroll-behavior: smooth;
        -webkit-overflow-scrolling: touch;
    }

    .slides::-webkit-scrollbar {
        width: 10px;
        height: 10px;
    }

    .slides::-webkit-scrollbar-thumb {
        background: rgb(188, 142, 150);
        border-radius: 10px;
    }

    .slides::-webkit-scrollbar-track {
        background: transparent;
    }

    .slides > div {
        scroll-snap-align: start;
        flex-shrink: 0;
        width: 100%;
        height: 100%;
        border-radius: 10px;
        background: #eee;
        transform-origin: center center;
        transform: scale(1);
        transition: transform 0.5s;
        position: relative;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .slider-nav {
        display: flex;
        justify-content: center;
        margin-top: 1rem;
    }

    .slider-nav > a {
        display: inline-flex;
        width: 1.5rem;
        height: 1.5rem;
        background: white;
        text-decoration: none;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        margin: 0 0.5rem;
        position: relative;
    }

    .slider-nav > a:active {
        top: 1px;
    }

    .slider-nav > a:focus {
        background: #000;
    }

    @media (prefers-color-scheme: light) {
        .slider-nav > a {
            background: #b3e5fc !important; /* Celeste */
        }
    }

    @supports (scroll-snap-type) {
        .slider-nav > a {
            display: block;
        }
    }
</style>
