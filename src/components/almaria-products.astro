---
import { getCollection } from "astro:content";
const items = await getCollection("items");

const sortedItems = items
    .filter((item) => item.data.isStock)
    .sort((a, b) => {
        const { data: dataA } = a;
        const { data: dataB } = b;

        // Primero, ordenar por oferta (isSale: true primero)
        if (dataA.isSale && !dataB.isSale) return -1;
        if (!dataA.isSale && dataB.isSale) return 1;

        // Segundo, ordenar por fecha de creación (más nuevo primero)
        const dateA = new Date(dataA.creationDate);
        const dateB = new Date(dataB.creationDate);
        if (dateA > dateB) return -1;
        if (dateA < dateB) return 1;

        // Tercero, ordenar por precio de mayor a menor
        return dataB.price - dataA.price;
    });
---

<main class="bg-white dark:bg-gray-900 flex-grow">
    <div
        class="mx-auto max-w-2xl px-4 py-12 sm:px-6 sm:py-12 lg:max-w-7xl lg:px-8"
    >
        <h2
            class="text-2xl font-bold tracking-tight text-gray-900 dark:text-gray-100"
        >
            Nuestros productos
        </h2>
        <div
            class="mt-6 grid grid-cols-1 gap-x-6 gap-y-10 sm:grid-cols-2 lg:grid-cols-4 xl:gap-x-8"
        >
            {
                sortedItems.map((item) => {
                    const { data, slug } = item;
                    const {
                        title,
                        description,
                        isSale,
                        creationDate,
                        price,
                        regularPrice,
                        image,
                    } = data;
                    return (
                        <article
                            class="group relative hover:scale-105"
                            data-key={item.id}
                        >
                            <img
                                transition:name={`img-${slug}`}
                                src={image[0]}
                                alt={description}
                                class="aspect-square w-full rounded-md bg-gray-200 object-cover group-hover:opacity-75 lg:aspect-auto lg:h-80 main-image"
                            />
                            {isSale && (
                                <span class="absolute top-2 left-2 bg-red-500 text-white text-xs font-semibold px-2 py-1 rounded">
                                    Oferta
                                </span>
                            )}
                            {new Date().getTime() -
                                new Date(creationDate).getTime() <
                                30 * 24 * 60 * 60 * 1000 && (
                                <span class="absolute top-2 right-2 bg-green-500 text-white text-xs font-semibold px-2 py-1 rounded">
                                    Nuevo
                                </span>
                            )}
                            <div class="mt-4 flex justify-between">
                                <div>
                                    <h3 class="text-sm text-gray-700 dark:text-gray-300">
                                        <a href={`/items/${slug}`}>
                                            <span
                                                aria-hidden="true"
                                                class="absolute inset-0"
                                            />
                                            {title}
                                        </a>
                                    </h3>
                                </div>
                                {isSale ? (
                                    <div class="text-end text-sm font-medium text-gray-900 dark:text-gray-100">
                                        <p>
                                            <span class="line-through text-gray-500 dark:text-gray-400">
                                                ${regularPrice}
                                            </span>
                                        </p>
                                        <p>
                                            <span class="text-red-500">
                                                (Descuento:
                                                {Math.round(
                                                    (1 - price / regularPrice) *
                                                        100,
                                                )}
                                                %)
                                            </span>
                                            ${item.data.price}
                                        </p>
                                    </div>
                                ) : (
                                    <p class="text-sm font-medium text-gray-900 dark:text-gray-100">
                                        ${price}
                                    </p>
                                )}
                            </div>
                        </article>
                    );
                })
            }
        </div>
    </div>
</main>
